# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# The current build version. Must be bumped manually for new features.
build-versions:
  &build-version-v1 "1.1.0"

x-filter-all-branches-and-tags: &all-branches-and-tags
  branches:
    only: /.*/
  tags:
    only: /.*/

x-filter-develop-only: &develop-only
  branches:
    only: develop

x-filter-staging-only: &staging-only
  branches:
    only: staging

x-filter-main-only: &main-only
  branches:
    only: main

x-filter-feature-only: &pushes-and-prs-only
  branches:
    ignore:
      - main
      - staging
      - develop

restore-dependencies: &restore-dependencies
  restore_cache:
    keys:
      - v1-dependencies1-{{ checksum "package.json" }}
      # fallback to using the latest cache if no exact match is found
      - v1-dependencies1-

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  prep:
    docker:
      - image: circleci/node:16
    steps:
      - checkout
      - *restore-dependencies
      - run:
          name: Install dependencies
          command: npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies1-{{ checksum "package.json" }}
  unit-tests:
    resource_class: large
    docker:
      - image: circleci/node:16
    steps:
      - checkout
      - *restore-dependencies
      - run: npm run test
  build-libs:
    parameters:
      env:
        type: string
        default: development
      build-version-v1:
        type: string
    docker:
      - image: circleci/node:16
    steps:
      - checkout
      - *restore-dependencies
      - run:
          name: Lint
          command: npm run lint
      - run:
          name: Build iframe library
          command: |
            echo "NODE_ENV=$NODE_ENV"
            npm run build-static-v1 # Build the v1 js files.
          environment:
            - NODE_ENV: << parameters.env >>
            - BUILD_VERSION_V1: << parameters.build-version-v1 >>
      - persist_to_workspace:
          root: .
          paths:
            - build/<< parameters.env >>/static
  build-demo:
    parameters:
      env:
        type: string
        default: development
    docker:
      - image: circleci/node:16
    steps:
      - checkout
      - *restore-dependencies
      - run:
          name: Build demo
          command: |
            echo "NODE_ENV=$NODE_ENV"
            npm run build-demo # Build the demo site.
          environment:
            - NODE_ENV: << parameters.env >>
      - persist_to_workspace:
          root: .
          paths:
            - build/<< parameters.env >>/demo
  deploy-libs:
    parameters:
      domain:
        type: string
      bucket:
        type: string
      env:
        type: string
        default: development
    docker:
      - image: google/cloud-sdk:282.0.0-alpine
    steps:
      - run: apk add --no-cache git make openssh
      - run: gcloud auth activate-service-account --key-file=<(echo "$GOOGLE_SERVICE_ACCOUNT_KEY")
      - attach_workspace:
          at: .
      - run:
          name: Deploy static files
          command: gsutil -m rsync -r build/<< parameters.env >>/static/ "gs://<< parameters.bucket >>/static"
  deploy-demo:
    parameters:
      domain:
        type: string
      bucket:
        type: string
      env:
        type: string
        default: development
    docker:
      - image: google/cloud-sdk:282.0.0-alpine
    steps:
      - run: apk add --no-cache git make openssh
      - run: gcloud auth activate-service-account --key-file=<(echo "$GOOGLE_SERVICE_ACCOUNT_KEY")
      - attach_workspace:
          at: .
      - run:
          name: Deploy demo
          command: gsutil -m rsync -r -d -x 'static' build/<< parameters.env >>/demo/tomito/ "gs://<< parameters.bucket >>"

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  default:
    jobs:
      # All
      - prep:
          filters: *all-branches-and-tags
      - unit-tests:
          filters: *all-branches-and-tags
          requires:
            - prep
      # Feature
      - build-libs:
          name: build-static-local
          filters: *pushes-and-prs-only
          requires:
            - unit-tests
          env: development
          build-version-v1: *build-version-v1
      - build-demo:
          name: build-demo-local
          filters: *pushes-and-prs-only
          requires:
            - unit-tests
          env: development
      # Develop
      - build-libs:
          name: build-static-qa
          filters: *develop-only
          requires:
            - unit-tests
          env: qa
          build-version-v1: *build-version-v1
      - build-demo:
          name: build-demo-qa
          filters: *develop-only
          requires:
            - unit-tests
          env: qa
      - deploy-libs:
          name: deploy-static-qa
          domain: protect-lite.qa.bestow.com
          bucket: protect-lite.qa.bestow.com
          env: qa
          context: gcp-policy-platform-qa
          requires:
            - build-static-qa
          filters: *develop-only
      - deploy-demo:
          name: deploy-demo-qa
          domain: protect-lite.qa.bestowlabs.com
          bucket: protect-lite.qa.bestowlabs.com
          env: qa
          context: gcp-policy-platform-qa
          requires:
            - build-demo-qa
          filters: *develop-only
      # Staging
      - build-libs:
          name: build-static-staging
          filters: *staging-only
          requires:
            - unit-tests
          env: staging
          build-version-v1: *build-version-v1
      - build-libs:
          name: build-static-uat
          filters: *staging-only
          requires:
            - unit-tests
          env: uat
          build-version-v1: *build-version-v1
      - build-demo:
          name: build-demo-staging
          filters: *staging-only
          requires:
            - unit-tests
          env: staging
      - build-demo:
          name: build-demo-uat
          filters: *staging-only
          requires:
            - unit-tests
          env: uat
      - deploy-libs:
          name: deploy-static-staging
          domain: protect-lite.staging.bestow.com
          bucket: protect-lite.staging.bestow.com
          env: staging
          context: gcp-policy-platform-staging
          requires:
            - build-static-staging
          filters: *staging-only
      - deploy-libs:
          name: deploy-static-uat
          domain: protect-lite.uat.bestow.com
          bucket: protect-lite.uat.bestow.com
          env: uat
          context: gcp-policy-platform-uat
          requires:
            - build-static-uat
          filters: *staging-only
      - deploy-demo:
          name: deploy-demo-staging
          domain: protect-lite.staging.bestowlabs.com
          bucket: protect-lite.staging.bestowlabs.com
          context: gcp-policy-platform-staging
          env: staging
          requires:
            - build-demo-staging
          filters: *staging-only
      - deploy-demo:
          name: deploy-demo-uat
          domain: protect-lite.uat.bestowlabs.com
          bucket: protect-lite.uat.bestowlabs.com
          env: uat
          context: gcp-policy-platform-uat
          requires:
            - build-demo-uat
          filters: *staging-only
      # Production
      - build-libs:
          name: build-static-prod
          filters: *main-only
          requires:
            - unit-tests
          env: production
          build-version-v1: *build-version-v1
      - build-demo:
          name: build-demo-prod
          filters: *main-only
          requires:
            - unit-tests
          env: production
      - deploy-libs:
          name: deploy-static-prod
          domain: protect-lite.bestow.com
          bucket: protect-lite.bestow.com
          env: production
          context: gcp-policy-platform-prod
          requires:
            - build-static-prod
          filters: *main-only
      - deploy-demo:
          name: deploy-demo-prod
          domain: protect-lite.bestowlabs.com
          bucket: protect-lite.bestowlabs.com
          context: gcp-policy-platform-prod
          env: production
          requires:
            - build-demo-prod
          filters: *main-only
