# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# The current build version. Must be bumped manually for new features.
build-versions:
  &build-version-v1 "1.1.5"

x-filter-all-branches: &all-branches
  branches:
    only: /.*/
  tags:
    ignore: /.*/

x-filter-develop-only: &develop-only
  branches:
    only: develop
  tags:
    ignore: /.*/

x-filter-staging-only: &staging-only
  branches:
    only: staging
  tags:
    ignore: /.*/

x-filter-main-only: &main-only
  branches:
    only: main
  tags:
    ignore: /.*/

x-filter-non-deploy-only: &non-deploy-branches
  branches:
    ignore:
      - main
      - staging
      - develop
  tags:
    ignore: /.*/

restore-dependencies: &restore-dependencies
  restore_cache:
    keys:
      - v1-dependencies1-{{ checksum "package.json" }}
      # fallback to using the latest cache if no exact match is found
      - v1-dependencies1-

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  prep:
    docker:
      - image: circleci/node:16
    steps:
      - checkout
      - *restore-dependencies
      - run:
          name: Install dependencies
          command: npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies1-{{ checksum "package.json" }}
  unit-tests:
    resource_class: large
    docker:
      - image: circleci/node:16
    steps:
      - checkout
      - *restore-dependencies
      - run: npm run test
  build-libs:
    parameters:
      env:
        type: string
        default: development
      build-version-v1:
        type: string
    docker:
      - image: circleci/node:16
    steps:
      - checkout
      - *restore-dependencies
      - run:
          name: Lint
          command: npm run lint
      - run:
          name: Build iframe library
          command: |
            echo "NODE_ENV=$NODE_ENV"
            npm run build-static-v1 # Build the v1 js files.
          environment:
            - NODE_ENV: << parameters.env >>
            - BUILD_VERSION_V1: << parameters.build-version-v1 >>
      - persist_to_workspace:
          root: .
          paths:
            - build/<< parameters.env >>/static
  build-demo:
    parameters:
      env:
        type: string
        default: development
    docker:
      - image: circleci/node:16
    steps:
      - checkout
      - *restore-dependencies
      - run:
          name: Build demo
          path: src/Demos/tomito_v2/
          command: |
            echo "NODE_ENV=$NODE_ENV"
            npm install
            npm run build # Build the demo site.
          environment:
            - NODE_ENV: << parameters.env >>
      - persist_to_workspace:
          root: .
          paths:
            - src/Demos/tomito_v2/build
            - '*'
  deploy-libs:
    parameters:
      domain:
        type: string
      bucket:
        type: string
      env:
        type: string
        default: development
    docker:
      - image: google/cloud-sdk:282.0.0-alpine
    steps:
      - run: apk add --no-cache git make openssh
      - run: gcloud auth activate-service-account --key-file=<(echo "$GOOGLE_SERVICE_ACCOUNT_KEY")
      - attach_workspace:
          at: .
      - run:
          name: Deploy static files
          command: gsutil -m rsync -r build/<< parameters.env >>/static/ "gs://<< parameters.bucket >>/static"
  deploy-demo:
    parameters:
      domain:
        type: string
      bucket:
        type: string
      env:
        type: string
        default: development  
    docker:
      - image: google/cloud-sdk:282.0.0-alpine
    steps:
      - run: apk add --no-cache git make openssh
      - run: gcloud auth activate-service-account --key-file=<(echo "$GOOGLE_SERVICE_ACCOUNT_KEY")
      - attach_workspace:
          at: .
      - run:
          name: Deploy demo
          command: gsutil -m rsync -r -d src/Demos/tomito_v2/build "gs://<< parameters.bucket >>"
  publish-github-release:
    parameters:
      domain:
        type: string
      build-version-v1:
        type: string
      release-type:
        type: enum
        enum: ["release", "pre-release", "draft"]
        default: "draft"
    docker:
      - image: circleci/node:16
    steps:
      - checkout
      - run:
          name: "Install github cli and envsubst"
          command: |
            curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg \
              | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
            echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] \
              https://cli.github.com/packages stable main" \
              | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
            sudo apt-get update -qq
            sudo apt-get install -qq -y gh gettext
      - run:
          name: "Publish release on GitHub"
          command: |
            # Build the additional release notes from the template. Substituting environment variables.
            export RELEASE_NOTES=$(envsubst < "release-notes-template.md")
            
            # Build the command option for the release type.
            case $RELEASE_TYPE in
            "release")
            export RELEASE_TYPE_OPTION=""
            ;;
            "pre-release")
            export RELEASE_TYPE_OPTION="--prerelease"
            ;;
            "draft")
            export RELEASE_TYPE_OPTION="--draft"
            ;;
            esac
            
            # Create the release in github. This will also create a git tag.
            gh release create "v$BUILD_VERSION_V1" --notes "$RELEASE_NOTES" --target $CIRCLE_BRANCH --generate-notes $RELEASE_TYPE_OPTION
          environment:
            - BUILD_VERSION_V1: << parameters.build-version-v1 >>
            - DOMAIN: << parameters.domain >>
            - RELEASE_TYPE: << parameters.release-type >>

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  default:
    jobs:
      # All
      - prep:
          filters: *all-branches
      - unit-tests:
          filters: *all-branches
          requires:
            - prep
      # Feature
      - build-libs:
          name: build-static-local
          filters: *non-deploy-branches
          requires:
            - unit-tests
          env: development
          build-version-v1: *build-version-v1
      - build-demo:
          name: build-demo-local
          filters: *non-deploy-branches
          requires:
            - unit-tests
          env: development
      # Develop
      - build-libs:
          name: build-static-qa
          filters: *develop-only
          requires:
            - unit-tests
          env: qa
          build-version-v1: *build-version-v1
      - build-demo:
          name: build-demo-qa
          filters: *develop-only
          requires:
            - unit-tests
          env: qa
      - deploy-libs:
          name: deploy-static-qa
          domain: protect-lite.qa.bestow.com
          bucket: protect-lite.qa.bestow.com
          env: qa
          context: gcp-policy-platform-qa
          requires:
            - build-static-qa
          filters: *develop-only
      - deploy-demo:
          name: deploy-demo-qa
          domain: protect-lite.qa.bestowlabs.com
          bucket: protect-lite.qa.bestowlabs.com
          env: qa
          context: gcp-policy-platform-qa
          requires:
            - build-demo-qa
          filters: *develop-only
      # Staging
      - build-libs:
          name: build-static-staging
          filters: *staging-only
          requires:
            - unit-tests
          env: staging
          build-version-v1: *build-version-v1
      - build-libs:
          name: build-static-uat
          filters: *staging-only
          requires:
            - unit-tests
          env: uat
          build-version-v1: *build-version-v1
      - build-demo:
          name: build-demo-staging
          filters: *staging-only
          requires:
            - unit-tests
          env: staging
      - build-demo:
          name: build-demo-uat
          filters: *staging-only
          requires:
            - unit-tests
          env: uat
      - deploy-libs:
          name: deploy-static-staging
          domain: protect-lite.staging.bestow.com
          bucket: protect-lite.staging.bestow.com
          env: staging
          context: gcp-policy-platform-staging
          requires:
            - build-static-staging
          filters: *staging-only
      - deploy-libs:
          name: deploy-static-uat
          domain: protect-lite.uat.bestow.com
          bucket: protect-lite.uat.bestow.com
          env: uat
          context: gcp-policy-platform-uat
          requires:
            - build-static-uat
          filters: *staging-only
      - deploy-demo:
          name: deploy-demo-staging
          domain: protect-lite.staging.bestowlabs.com
          bucket: protect-lite.staging.bestowlabs.com
          context: gcp-policy-platform-staging
          env: staging
          requires:
            - build-demo-staging
          filters: *staging-only
      - deploy-demo:
          name: deploy-demo-uat
          domain: protect-lite.uat.bestowlabs.com
          bucket: protect-lite.uat.bestowlabs.com
          env: uat
          context: gcp-policy-platform-uat
          requires:
            - build-demo-uat
          filters: *staging-only
      # Production
      - build-libs:
          name: build-static-prod
          filters: *main-only
          requires:
            - unit-tests
          env: production
          build-version-v1: *build-version-v1
      - build-demo:
          name: build-demo-prod
          filters: *main-only
          requires:
            - unit-tests
          env: production
      - deploy-libs:
          name: deploy-static-prod
          domain: protect-lite.bestow.com
          bucket: protect-lite.bestow.com
          env: production
          context: gcp-policy-platform-prod
          requires:
            - build-static-prod
          filters: *main-only
      - deploy-demo:
          name: deploy-demo-prod
          domain: protect-lite.bestowlabs.com
          bucket: protect-lite.bestowlabs.com
          context: gcp-policy-platform-prod
          env: production
          requires:
            - build-demo-prod
          filters: *main-only
      - publish-github-release:
          name: publish-github-release-prod
          context: github-rw
          domain: protect-lite.bestow.com
          build-version-v1: *build-version-v1
          release-type: "release"
          requires:
            - deploy-static-prod
            - deploy-demo-prod
          filters: *main-only
